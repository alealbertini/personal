
cropflip_c.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <cropflip_c>:
   0:	44 8b 54 24 10       	mov    r10d,DWORD PTR [rsp+0x10]
   5:	8b 4c 24 08          	mov    ecx,DWORD PTR [rsp+0x8]
   9:	45 85 d2             	test   r10d,r10d
   c:	7e 6a                	jle    78 <cropflip_c+0x78>
   e:	8b 54 24 20          	mov    edx,DWORD PTR [rsp+0x20]
  12:	4d 63 c0             	movsxd r8,r8d
  15:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
  19:	4d 63 d9             	movsxd r11,r9d
  1c:	45 31 c9             	xor    r9d,r9d
  1f:	44 01 d2             	add    edx,r10d
  22:	c1 e0 02             	shl    eax,0x2
  25:	48 63 d2             	movsxd rdx,edx
  28:	48 98                	cdqe   
  2a:	48 83 ea 01          	sub    rdx,0x1
  2e:	49 0f af d0          	imul   rdx,r8
  32:	48 01 d0             	add    rax,rdx
  35:	48 01 c7             	add    rdi,rax
  38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  3f:	00 
  40:	31 c0                	xor    eax,eax
  42:	85 c9                	test   ecx,ecx
  44:	7e 23                	jle    69 <cropflip_c+0x69>
  46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4d:	00 00 00 
  50:	0f b7 14 87          	movzx  edx,WORD PTR [rdi+rax*4]
  54:	66 89 14 86          	mov    WORD PTR [rsi+rax*4],dx
  58:	0f b6 54 87 02       	movzx  edx,BYTE PTR [rdi+rax*4+0x2]
  5d:	88 54 86 02          	mov    BYTE PTR [rsi+rax*4+0x2],dl
  61:	48 83 c0 01          	add    rax,0x1
  65:	39 c1                	cmp    ecx,eax
  67:	7f e7                	jg     50 <cropflip_c+0x50>
  69:	41 83 c1 01          	add    r9d,0x1
  6d:	4c 29 c7             	sub    rdi,r8
  70:	4c 01 de             	add    rsi,r11
  73:	45 39 d1             	cmp    r9d,r10d
  76:	75 c8                	jne    40 <cropflip_c+0x40>
  78:	f3 c3                	repz ret 

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	1e                   	(bad)  
   1:	02 00                	add    al,BYTE PTR [rax]
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 08                	add    BYTE PTR [rax],cl
   b:	01 00                	add    DWORD PTR [rax],eax
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 01                	add    BYTE PTR [rcx],al
	...
  2d:	02 01                	add    al,BYTE PTR [rcx]
  2f:	08 00                	or     BYTE PTR [rax],al
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 02                	add    BYTE PTR [rdx],al
  35:	02 07                	add    al,BYTE PTR [rdi]
  37:	00 00                	add    BYTE PTR [rax],al
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
  42:	03 00                	add    eax,DWORD PTR [rax]
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 03                	add    BYTE PTR [rbx],al
  48:	02 18                	add    bl,BYTE PTR [rax]
  4a:	73 00                	jae    4c <.debug_info+0x4c>
  4c:	00 00                	add    BYTE PTR [rax],al
  4e:	04 62                	add    al,0x62
  50:	00 02                	add    BYTE PTR [rdx],al
  52:	19 2d 00 00 00 02    	sbb    DWORD PTR [rip+0x2000000],ebp        # 2000058 <cropflip_c+0x2000058>
  58:	23 00                	and    eax,DWORD PTR [rax]
  5a:	04 67                	add    al,0x67
  5c:	00 02                	add    BYTE PTR [rdx],al
  5e:	19 2d 00 00 00 02    	sbb    DWORD PTR [rip+0x2000000],ebp        # 2000064 <cropflip_c+0x2000064>
  64:	23 01                	and    eax,DWORD PTR [rcx]
  66:	04 72                	add    al,0x72
  68:	00 02                	add    BYTE PTR [rdx],al
  6a:	19 2d 00 00 00 02    	sbb    DWORD PTR [rip+0x2000000],ebp        # 2000070 <cropflip_c+0x2000070>
  70:	23 02                	and    eax,DWORD PTR [rdx]
  72:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 78 <.debug_info+0x78>
  78:	02 1a                	add    bl,BYTE PTR [rdx]
  7a:	42 00 00             	rex.X add BYTE PTR [rax],al
  7d:	00 06                	add    BYTE PTR [rsi],al
  7f:	04 05                	add    al,0x5
  81:	69 6e 74 00 07 08 2d 	imul   ebp,DWORD PTR [rsi+0x74],0x2d080700
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	00 02                	add    BYTE PTR [rdx],al
  8c:	01 06                	add    DWORD PTR [rsi],eax
  8e:	00 00                	add    BYTE PTR [rax],al
  90:	00 00                	add    BYTE PTR [rax],al
  92:	02 08                	add    cl,BYTE PTR [rax]
  94:	07                   	(bad)  
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 00                	add    BYTE PTR [rax],al
  99:	02 01                	add    al,BYTE PTR [rcx]
  9b:	02 00                	add    al,BYTE PTR [rax]
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 08                	add    BYTE PTR [rax],cl
  a1:	01 00                	add    DWORD PTR [rax],eax
  a3:	00 00                	add    BYTE PTR [rax],al
  a5:	00 01                	add    BYTE PTR [rcx],al
  a7:	05 01 00 00 00       	add    eax,0x1
	...
  b8:	00 02                	add    BYTE PTR [rdx],al
  ba:	77 08                	ja     c4 <.debug_info+0xc4>
  bc:	df 01                	fild   WORD PTR [rcx]
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	09 73 72             	or     DWORD PTR [rbx+0x72],esi
  c3:	63 00                	movsxd eax,DWORD PTR [rax]
  c5:	01 06                	add    DWORD PTR [rsi],eax
  c7:	85 00                	test   DWORD PTR [rax],eax
  c9:	00 00                	add    BYTE PTR [rax],al
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	09 64 73 74          	or     DWORD PTR [rbx+rsi*2+0x74],esp
  d3:	00 01                	add    BYTE PTR [rcx],al
  d5:	07                   	(bad)  
  d6:	85 00                	test   DWORD PTR [rax],eax
  d8:	00 00                	add    BYTE PTR [rax],al
  da:	00 00                	add    BYTE PTR [rax],al
  dc:	00 00                	add    BYTE PTR [rax],al
  de:	0a 00                	or     al,BYTE PTR [rax]
  e0:	00 00                	add    BYTE PTR [rax],al
  e2:	00 01                	add    BYTE PTR [rcx],al
  e4:	08 7e 00             	or     BYTE PTR [rsi+0x0],bh
  e7:	00 00                	add    BYTE PTR [rax],al
  e9:	00 00                	add    BYTE PTR [rax],al
  eb:	00 00                	add    BYTE PTR [rax],al
  ed:	0a 00                	or     al,BYTE PTR [rax]
  ef:	00 00                	add    BYTE PTR [rax],al
  f1:	00 01                	add    BYTE PTR [rcx],al
  f3:	09 7e 00             	or     DWORD PTR [rsi+0x0],edi
  f6:	00 00                	add    BYTE PTR [rax],al
  f8:	00 00                	add    BYTE PTR [rax],al
  fa:	00 00                	add    BYTE PTR [rax],al
  fc:	0a 00                	or     al,BYTE PTR [rax]
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	00 01                	add    BYTE PTR [rcx],al
 102:	0a 7e 00             	or     bh,BYTE PTR [rsi+0x0]
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 00                	add    BYTE PTR [rax],al
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	0a 00                	or     al,BYTE PTR [rax]
 10d:	00 00                	add    BYTE PTR [rax],al
 10f:	00 01                	add    BYTE PTR [rcx],al
 111:	0b 7e 00             	or     edi,DWORD PTR [rsi+0x0]
 114:	00 00                	add    BYTE PTR [rax],al
 116:	00 00                	add    BYTE PTR [rax],al
 118:	00 00                	add    BYTE PTR [rax],al
 11a:	0b 00                	or     eax,DWORD PTR [rax]
 11c:	00 00                	add    BYTE PTR [rax],al
 11e:	00 01                	add    BYTE PTR [rcx],al
 120:	0c 7e                	or     al,0x7e
 122:	00 00                	add    BYTE PTR [rax],al
 124:	00 02                	add    BYTE PTR [rdx],al
 126:	91                   	xchg   ecx,eax
 127:	00 0b                	add    BYTE PTR [rbx],cl
 129:	00 00                	add    BYTE PTR [rax],al
 12b:	00 00                	add    BYTE PTR [rax],al
 12d:	01 0d 7e 00 00 00    	add    DWORD PTR [rip+0x7e],ecx        # 1b1 <.debug_info+0x1b1>
 133:	02 91 08 0b 00 00    	add    dl,BYTE PTR [rcx+0xb08]
 139:	00 00                	add    BYTE PTR [rax],al
 13b:	01 0e                	add    DWORD PTR [rsi],ecx
 13d:	7e 00                	jle    13f <.debug_info+0x13f>
 13f:	00 00                	add    BYTE PTR [rax],al
 141:	02 91 10 0b 00 00    	add    dl,BYTE PTR [rcx+0xb10]
 147:	00 00                	add    BYTE PTR [rax],al
 149:	01 0f                	add    DWORD PTR [rdi],ecx
 14b:	7e 00                	jle    14d <.debug_info+0x14d>
 14d:	00 00                	add    BYTE PTR [rax],al
 14f:	02 91 18 0c 01 f2    	add    dl,BYTE PTR [rcx-0xdfef3e8]
 155:	01 00                	add    DWORD PTR [rax],eax
 157:	00 00                	add    BYTE PTR [rax],al
 159:	00 00                	add    BYTE PTR [rax],al
 15b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 161 <.debug_info+0x161>
 161:	01 11                	add    DWORD PTR [rcx],edx
 163:	f7 01 00 00 00 00    	test   DWORD PTR [rcx],0x0
 169:	00 00                	add    BYTE PTR [rax],al
 16b:	0c 01                	or     al,0x1
 16d:	10 02                	adc    BYTE PTR [rdx],al
 16f:	00 00                	add    BYTE PTR [rax],al
 171:	00 00                	add    BYTE PTR [rax],al
 173:	00 00                	add    BYTE PTR [rax],al
 175:	0d 00 00 00 00       	or     eax,0x0
 17a:	01 12                	add    DWORD PTR [rdx],edx
 17c:	15 02 00 00 00       	adc    eax,0x2
 181:	00 00                	add    BYTE PTR [rax],al
 183:	00 0e                	add    BYTE PTR [rsi],cl
	...
 195:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
 198:	01 14 7e             	add    DWORD PTR [rsi+rdi*2],edx
 19b:	00 00                	add    BYTE PTR [rax],al
 19d:	00 00                	add    BYTE PTR [rax],al
 19f:	00 00                	add    BYTE PTR [rax],al
 1a1:	00 10                	add    BYTE PTR [rax],dl
 1a3:	00 00                	add    BYTE PTR [rax],al
 1a5:	00 00                	add    BYTE PTR [rax],al
 1a7:	0f 6a 00             	punpckhdq mm0,QWORD PTR [rax]
 1aa:	01 15 7e 00 00 00    	add    DWORD PTR [rip+0x7e],edx        # 22e <cropflip_c+0x22e>
 1b0:	00 00                	add    BYTE PTR [rax],al
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	0e                   	(bad)  
	...
 1c5:	11 70 5f             	adc    DWORD PTR [rax+0x5f],esi
 1c8:	64 00 01             	add    BYTE PTR fs:[rcx],al
 1cb:	17                   	(bad)  
 1cc:	1b 02                	sbb    eax,DWORD PTR [rdx]
 1ce:	00 00                	add    BYTE PTR [rax],al
 1d0:	11 70 5f             	adc    DWORD PTR [rax+0x5f],esi
 1d3:	73 00                	jae    1d5 <.debug_info+0x1d5>
 1d5:	01 18                	add    DWORD PTR [rax],ebx
 1d7:	1b 02                	sbb    eax,DWORD PTR [rdx]
 1d9:	00 00                	add    BYTE PTR [rax],al
 1db:	00 00                	add    BYTE PTR [rax],al
 1dd:	00 00                	add    BYTE PTR [rax],al
 1df:	12 2d 00 00 00 f2    	adc    ch,BYTE PTR [rip+0xfffffffff2000000]        # fffffffff20001e5 <cropflip_c+0xfffffffff20001e5>
 1e5:	01 00                	add    DWORD PTR [rax],eax
 1e7:	00 13                	add    BYTE PTR [rbx],dl
 1e9:	92                   	xchg   edx,eax
 1ea:	00 00                	add    BYTE PTR [rax],al
 1ec:	00 52 01             	add    BYTE PTR [rdx+0x1],dl
 1ef:	00 00                	add    BYTE PTR [rax],al
 1f1:	00 14 92             	add    BYTE PTR [rdx+rdx*4],dl
 1f4:	00 00                	add    BYTE PTR [rax],al
 1f6:	00 07                	add    BYTE PTR [rdi],al
 1f8:	08 df                	or     bh,bl
 1fa:	01 00                	add    DWORD PTR [rax],eax
 1fc:	00 12                	add    BYTE PTR [rdx],dl
 1fe:	2d 00 00 00 10       	sub    eax,0x10000000
 203:	02 00                	add    al,BYTE PTR [rax]
 205:	00 13                	add    BYTE PTR [rbx],dl
 207:	92                   	xchg   edx,eax
 208:	00 00                	add    BYTE PTR [rax],al
 20a:	00 6b 01             	add    BYTE PTR [rbx+0x1],ch
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	00 14 92             	add    BYTE PTR [rdx+rdx*4],dl
 212:	00 00                	add    BYTE PTR [rax],al
 214:	00 07                	add    BYTE PTR [rdi],al
 216:	08 fd                	or     ch,bh
 218:	01 00                	add    DWORD PTR [rax],eax
 21a:	00 07                	add    BYTE PTR [rdi],al
 21c:	08 73 00             	or     BYTE PTR [rbx+0x0],dh
 21f:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <cropflip_c+0x30b1316>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 01                	adc    al,BYTE PTR [rcx]
   f:	10 06                	adc    BYTE PTR [rsi],al
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  16:	0b 0b                	or     ecx,DWORD PTR [rbx]
  18:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  1b:	0e                   	(bad)  
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	03 13                	add    edx,DWORD PTR [rbx]
  20:	01 03                	add    DWORD PTR [rbx],eax
  22:	0e                   	(bad)  
  23:	0b 0b                	or     ecx,DWORD PTR [rbx]
  25:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  27:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  29:	01 13                	add    DWORD PTR [rbx],edx
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	04 0d                	add    al,0xd
  2f:	00 03                	add    BYTE PTR [rbx],al
  31:	08 3a                	or     BYTE PTR [rdx],bh
  33:	0b 3b                	or     edi,DWORD PTR [rbx]
  35:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  38:	38 0a                	cmp    BYTE PTR [rdx],cl
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	05 16 00 03 0e       	add    eax,0xe030016
  41:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  43:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  45:	49 13 00             	adc    rax,QWORD PTR [r8]
  48:	00 06                	add    BYTE PTR [rsi],al
  4a:	24 00                	and    al,0x0
  4c:	0b 0b                	or     ecx,DWORD PTR [rbx]
  4e:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  51:	08 00                	or     BYTE PTR [rax],al
  53:	00 07                	add    BYTE PTR [rdi],al
  55:	0f 00 0b             	str    WORD PTR [rbx]
  58:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	08 2e                	or     BYTE PTR [rsi],ch
  5f:	01 3f                	add    DWORD PTR [rdi],edi
  61:	0c 03                	or     al,0x3
  63:	0e                   	(bad)  
  64:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  66:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  68:	27                   	(bad)  
  69:	0c 11                	or     al,0x11
  6b:	01 12                	add    DWORD PTR [rdx],edx
  6d:	01 40 0a             	add    DWORD PTR [rax+0xa],eax
  70:	01 13                	add    DWORD PTR [rbx],edx
  72:	00 00                	add    BYTE PTR [rax],al
  74:	09 05 00 03 08 3a    	or     DWORD PTR [rip+0x3a080300],eax        # 3a08037a <cropflip_c+0x3a08037a>
  7a:	0b 3b                	or     edi,DWORD PTR [rbx]
  7c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  7f:	02 06                	add    al,BYTE PTR [rsi]
  81:	00 00                	add    BYTE PTR [rax],al
  83:	0a 05 00 03 0e 3a    	or     al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0389 <cropflip_c+0x3a0e0389>
  89:	0b 3b                	or     edi,DWORD PTR [rbx]
  8b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  8e:	02 06                	add    al,BYTE PTR [rsi]
  90:	00 00                	add    BYTE PTR [rax],al
  92:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0398 <cropflip_c+0x3a0e0398>
  98:	0b 3b                	or     edi,DWORD PTR [rbx]
  9a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  9d:	02 0a                	add    cl,BYTE PTR [rdx]
  9f:	00 00                	add    BYTE PTR [rax],al
  a1:	0c 34                	or     al,0x34
  a3:	00 34 0c             	add    BYTE PTR [rsp+rcx*1],dh
  a6:	49 13 02             	adc    rax,QWORD PTR [r10]
  a9:	06                   	(bad)  
  aa:	00 00                	add    BYTE PTR [rax],al
  ac:	0d 34 00 03 0e       	or     eax,0xe030034
  b1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  b3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  b5:	49 13 02             	adc    rax,QWORD PTR [r10]
  b8:	06                   	(bad)  
  b9:	00 00                	add    BYTE PTR [rax],al
  bb:	0e                   	(bad)  
  bc:	0b 01                	or     eax,DWORD PTR [rcx]
  be:	11 01                	adc    DWORD PTR [rcx],eax
  c0:	12 01                	adc    al,BYTE PTR [rcx]
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	0f 34                	sysenter 
  c6:	00 03                	add    BYTE PTR [rbx],al
  c8:	08 3a                	or     BYTE PTR [rdx],bh
  ca:	0b 3b                	or     edi,DWORD PTR [rbx]
  cc:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  cf:	02 06                	add    al,BYTE PTR [rsi]
  d1:	00 00                	add    BYTE PTR [rax],al
  d3:	10 0b                	adc    BYTE PTR [rbx],cl
  d5:	01 55 06             	add    DWORD PTR [rbp+0x6],edx
  d8:	00 00                	add    BYTE PTR [rax],al
  da:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
  dd:	03 08                	add    ecx,DWORD PTR [rax]
  df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  e1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  e3:	49 13 00             	adc    rax,QWORD PTR [r8]
  e6:	00 12                	add    BYTE PTR [rdx],dl
  e8:	01 01                	add    DWORD PTR [rcx],eax
  ea:	49 13 01             	adc    rax,QWORD PTR [r9]
  ed:	13 00                	adc    eax,DWORD PTR [rax]
  ef:	00 13                	add    BYTE PTR [rbx],dl
  f1:	21 00                	and    DWORD PTR [rax],eax
  f3:	49 13 2f             	adc    rbp,QWORD PTR [r15]
  f6:	13 00                	adc    eax,DWORD PTR [rax]
  f8:	00 14 26             	add    BYTE PTR [rsi+riz*1],dl
  fb:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  fe:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
	...
   8:	38 00                	cmp    BYTE PTR [rax],al
   a:	00 00                	add    BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	01 00                	add    DWORD PTR [rax],eax
  12:	55                   	push   rbp
	...
  2b:	38 00                	cmp    BYTE PTR [rax],al
  2d:	00 00                	add    BYTE PTR [rax],al
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	00 00                	add    BYTE PTR [rax],al
  33:	01 00                	add    DWORD PTR [rax],eax
  35:	54                   	push   rsp
	...
  4e:	12 00                	adc    al,BYTE PTR [rax]
  50:	00 00                	add    BYTE PTR [rax],al
  52:	00 00                	add    BYTE PTR [rax],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	01 00                	add    DWORD PTR [rax],eax
  58:	51                   	push   rcx
	...
  71:	09 00                	or     DWORD PTR [rax],eax
  73:	00 00                	add    BYTE PTR [rax],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 00                	add    BYTE PTR [rax],al
  79:	01 00                	add    DWORD PTR [rax],eax
  7b:	52                   	push   rdx
	...
  94:	78 00                	js     96 <.debug_loc+0x96>
  96:	00 00                	add    BYTE PTR [rax],al
  98:	00 00                	add    BYTE PTR [rax],al
  9a:	00 00                	add    BYTE PTR [rax],al
  9c:	01 00                	add    DWORD PTR [rax],eax
  9e:	58                   	pop    rax
	...
  b7:	1f                   	(bad)  
  b8:	00 00                	add    BYTE PTR [rax],al
  ba:	00 00                	add    BYTE PTR [rax],al
  bc:	00 00                	add    BYTE PTR [rax],al
  be:	00 01                	add    BYTE PTR [rcx],al
  c0:	00 59 70             	add    BYTE PTR [rcx+0x70],bl
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 78 00             	add    BYTE PTR [rax+0x0],bh
  cc:	00 00                	add    BYTE PTR [rax],al
  ce:	00 00                	add    BYTE PTR [rax],al
  d0:	00 00                	add    BYTE PTR [rax],al
  d2:	01 00                	add    DWORD PTR [rax],eax
  d4:	5b                   	pop    rbx
	...
  ed:	15 00 00 00 00       	adc    eax,0x0
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	00 0b                	add    BYTE PTR [rbx],cl
  f6:	00 78 00             	add    BYTE PTR [rax+0x0],bh
  f9:	08 20                	or     BYTE PTR [rax],ah
  fb:	24 08                	and    al,0x8
  fd:	20 26                	and    BYTE PTR [rsi],ah
  ff:	31 1c 9f             	xor    DWORD PTR [rdi+rbx*4],ebx
 102:	15 00 00 00 00       	adc    eax,0x0
 107:	00 00                	add    BYTE PTR [rax],al
 109:	00 78 00             	add    BYTE PTR [rax+0x0],bh
 10c:	00 00                	add    BYTE PTR [rax],al
 10e:	00 00                	add    BYTE PTR [rax],al
 110:	00 00                	add    BYTE PTR [rax],al
 112:	03 00                	add    eax,DWORD PTR [rax]
 114:	78 7f                	js     195 <.debug_loc+0x195>
 116:	9f                   	lahf   
	...
 12f:	1f                   	(bad)  
 130:	00 00                	add    BYTE PTR [rax],al
 132:	00 00                	add    BYTE PTR [rax],al
 134:	00 00                	add    BYTE PTR [rax],al
 136:	00 0b                	add    BYTE PTR [rbx],cl
 138:	00 79 00             	add    BYTE PTR [rcx+0x0],bh
 13b:	08 20                	or     BYTE PTR [rax],ah
 13d:	24 08                	and    al,0x8
 13f:	20 26                	and    BYTE PTR [rsi],ah
 141:	31 1c 9f             	xor    DWORD PTR [rdi+rbx*4],ebx
 144:	1f                   	(bad)  
 145:	00 00                	add    BYTE PTR [rax],al
 147:	00 00                	add    BYTE PTR [rax],al
 149:	00 00                	add    BYTE PTR [rax],al
 14b:	00 78 00             	add    BYTE PTR [rax+0x0],bh
 14e:	00 00                	add    BYTE PTR [rax],al
 150:	00 00                	add    BYTE PTR [rax],al
 152:	00 00                	add    BYTE PTR [rax],al
 154:	03 00                	add    eax,DWORD PTR [rax]
 156:	7b 7f                	jnp    1d7 <cropflip_c+0x1d7>
 158:	9f                   	lahf   
	...
 171:	38 00                	cmp    BYTE PTR [rax],al
 173:	00 00                	add    BYTE PTR [rax],al
 175:	00 00                	add    BYTE PTR [rax],al
 177:	00 00                	add    BYTE PTR [rax],al
 179:	02 00                	add    al,BYTE PTR [rax]
 17b:	30 9f 6d 00 00 00    	xor    BYTE PTR [rdi+0x6d],bl
 181:	00 00                	add    BYTE PTR [rax],al
 183:	00 00                	add    BYTE PTR [rax],al
 185:	78 00                	js     187 <.debug_loc+0x187>
 187:	00 00                	add    BYTE PTR [rax],al
 189:	00 00                	add    BYTE PTR [rax],al
 18b:	00 00                	add    BYTE PTR [rax],al
 18d:	01 00                	add    DWORD PTR [rax],eax
 18f:	59                   	pop    rcx
	...
 1a0:	38 00                	cmp    BYTE PTR [rax],al
 1a2:	00 00                	add    BYTE PTR [rax],al
 1a4:	00 00                	add    BYTE PTR [rax],al
 1a6:	00 00                	add    BYTE PTR [rax],al
 1a8:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 1ab:	00 00                	add    BYTE PTR [rax],al
 1ad:	00 00                	add    BYTE PTR [rax],al
 1af:	00 02                	add    BYTE PTR [rdx],al
 1b1:	00 30                	add    BYTE PTR [rax],dh
 1b3:	9f                   	lahf   
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
  18:	7a 00                	jp     1a <.debug_aranges+0x1a>
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	1f                   	(bad)  
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 00                	add    BYTE PTR [rax],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 40 00             	add    BYTE PTR [rax+0x0],al
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	63 00                	movsxd eax,DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	2c 00                	sub    al,0x0
   8:	00 00                	add    BYTE PTR [rax],al
   a:	01 01                	add    DWORD PTR [rcx],eax
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
  1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  1f:	70 66                	jo     87 <cropflip_c+0x87>
  21:	6c                   	ins    BYTE PTR es:[rdi],dx
  22:	69 70 5f 63 2e 63 00 	imul   esi,DWORD PTR [rax+0x5f],0x632e63
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 74 70 32          	add    BYTE PTR [rax+rsi*2+0x32],dh
  2f:	2e                   	cs
  30:	68 00 00 00 00       	push   0x0
  35:	00 00                	add    BYTE PTR [rax],al
  37:	09 02                	or     DWORD PTR [rdx],eax
	...
  41:	03 0f                	add    ecx,DWORD PTR [rdi]
  43:	01 01                	add    DWORD PTR [rcx],eax
  45:	94                   	xchg   esp,eax
  46:	03 71 58             	add    esi,DWORD PTR [rcx+0x58]
  49:	03 0f                	add    ecx,DWORD PTR [rdi]
  4b:	d6                   	(bad)  
  4c:	03 71 3c             	add    esi,DWORD PTR [rcx+0x3c]
  4f:	00 02                	add    BYTE PTR [rdx],al
  51:	04 01                	add    al,0x1
  53:	03 10                	add    edx,DWORD PTR [rax]
  55:	08 f2                	or     dl,dh
  57:	00 02                	add    BYTE PTR [rdx],al
  59:	04 02                	add    al,0x2
  5b:	f6 00 02             	test   BYTE PTR [rax],0x2
  5e:	04 02                	add    al,0x2
  60:	08 46 49             	or     BYTE PTR [rsi+0x49],al
  63:	08 00                	or     BYTE PTR [rax],al
  65:	01 01                	add    DWORD PTR [rcx],eax

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	74 61                	je     63 <.debug_str+0x63>
   2:	6d                   	ins    DWORD PTR es:[rdi],dx
   3:	78 00                	js     5 <.debug_str+0x5>
   5:	64                   	fs
   6:	73 74                	jae    7c <.debug_str+0x7c>
   8:	5f                   	pop    rdi
   9:	6d                   	ins    DWORD PTR es:[rdi],dx
   a:	61                   	(bad)  
   b:	74 72                	je     7f <.debug_str+0x7f>
   d:	69 78 00 73 72 63 5f 	imul   edi,DWORD PTR [rax+0x0],0x5f637273
  14:	72 6f                	jb     85 <.debug_str+0x85>
  16:	77 5f                	ja     77 <.debug_str+0x77>
  18:	73 69                	jae    83 <.debug_str+0x83>
  1a:	7a 65                	jp     81 <.debug_str+0x81>
  1c:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
  1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20:	70 66                	jo     88 <.debug_str+0x88>
  22:	6c                   	ins    BYTE PTR es:[rdi],dx
  23:	69 70 5f 63 2e 63 00 	imul   esi,DWORD PTR [rax+0x5f],0x632e63
  2a:	62                   	(bad)  
  2b:	67 72 5f             	addr32 jb 8d <.debug_str+0x8d>
  2e:	74 00                	je     30 <.debug_str+0x30>
  30:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
  33:	73 00                	jae    35 <.debug_str+0x35>
  35:	75 6e                	jne    a5 <.debug_str+0xa5>
  37:	73 69                	jae    a2 <.debug_str+0xa2>
  39:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  3b:	65 64 20 63 68       	gs and BYTE PTR fs:gs:[rbx+0x68],ah
  40:	61                   	(bad)  
  41:	72 00                	jb     43 <.debug_str+0x43>
  43:	63 72 6f             	movsxd esi,DWORD PTR [rdx+0x6f]
  46:	70 66                	jo     ae <.debug_str+0xae>
  48:	6c                   	ins    BYTE PTR es:[rdi],dx
  49:	69 70 5f 63 00 6c 6f 	imul   esi,DWORD PTR [rax+0x5f],0x6f6c0063
  50:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  51:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  55:	73 69                	jae    c0 <.debug_str+0xc0>
  57:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  59:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[rcx+0x6e],ch
  5e:	74 00                	je     60 <.debug_str+0x60>
  60:	73 68                	jae    ca <.debug_str+0xca>
  62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  63:	72 74                	jb     d9 <.debug_str+0xd9>
  65:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  68:	73 69                	jae    d3 <.debug_str+0xd3>
  6a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  6c:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[rcx+0x6e],ch
  71:	74 00                	je     73 <.debug_str+0x73>
  73:	47                   	rex.RXB
  74:	4e 55                	rex.WRX push rbp
  76:	20 43 20             	and    BYTE PTR [rbx+0x20],al
  79:	34 2e                	xor    al,0x2e
  7b:	36 2e 33 00          	ss xor eax,DWORD PTR cs:ss:[rax]
  7f:	75 6e                	jne    ef <.debug_str+0xef>
  81:	73 69                	jae    ec <.debug_str+0xec>
  83:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  85:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[rcx+0x6e],ch
  8a:	74 00                	je     8c <.debug_str+0x8c>
  8c:	66 69 6c 61 73 00 63 	imul   bp,WORD PTR [rcx+riz*2+0x73],0x6300
  93:	68 61 72 00 6f       	push   0x6f007261
  98:	66                   	data16
  99:	66                   	data16
  9a:	73 65                	jae    101 <cropflip_c+0x101>
  9c:	74 78                	je     116 <cropflip_c+0x116>
  9e:	00 6f 66             	add    BYTE PTR [rdi+0x66],ch
  a1:	66                   	data16
  a2:	73 65                	jae    109 <cropflip_c+0x109>
  a4:	74 79                	je     11f <cropflip_c+0x11f>
  a6:	00 74 61 6d          	add    BYTE PTR [rcx+riz*2+0x6d],dh
  aa:	79 00                	jns    ac <.debug_str+0xac>
  ac:	64                   	fs
  ad:	73 74                	jae    123 <cropflip_c+0x123>
  af:	5f                   	pop    rdi
  b0:	72 6f                	jb     121 <cropflip_c+0x121>
  b2:	77 5f                	ja     113 <cropflip_c+0x113>
  b4:	73 69                	jae    11f <cropflip_c+0x11f>
  b6:	7a 65                	jp     11d <cropflip_c+0x11d>
  b8:	00 2f                	add    BYTE PTR [rdi],ch
  ba:	68 6f 6d 65 2f       	push   0x2f656d6f
  bf:	73 65                	jae    126 <cropflip_c+0x126>
  c1:	62                   	(bad)  
  c2:	61                   	(bad)  
  c3:	2f                   	(bad)  
  c4:	46                   	rex.RX
  c5:	43                   	rex.XB
  c6:	45                   	rex.RB
  c7:	4e 2f                	rex.WRX (bad) 
  c9:	4f 72 67             	rex.WRXB jb 133 <cropflip_c+0x133>
  cc:	61                   	(bad)  
  cd:	20 49 49             	and    BYTE PTR [rcx+0x49],cl
  d0:	2f                   	(bad)  
  d1:	74 70                	je     143 <cropflip_c+0x143>
  d3:	73 2f                	jae    104 <cropflip_c+0x104>
  d5:	74 70                	je     147 <cropflip_c+0x147>
  d7:	32 2f                	xor    ch,BYTE PTR [rdi]
  d9:	73 6f                	jae    14a <cropflip_c+0x14a>
  db:	6c                   	ins    BYTE PTR es:[rdi],dx
  dc:	75 63                	jne    141 <cropflip_c+0x141>
  de:	69 6f 6e 2f 73 72 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x6372732f
  e5:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
  e8:	63 5f 6d             	movsxd ebx,DWORD PTR [rdi+0x6d]
  eb:	61                   	(bad)  
  ec:	74 72                	je     160 <cropflip_c+0x160>
  ee:	69 78 00 5f 42 6f 6f 	imul   edi,DWORD PTR [rax+0x0],0x6f6f425f
  f5:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <cropflip_c+0x79>
   b:	74 75                	je     82 <cropflip_c+0x82>
   d:	2f                   	(bad)  
   e:	4c 69 6e 61 72 6f 20 	imul   r13,QWORD PTR [rsi+0x61],0x34206f72
  15:	34 
  16:	2e 36 2e 33 2d 31 75 	cs ss xor ebp,DWORD PTR cs:ss:[rip+0x75627531]        # 75627550 <cropflip_c+0x75627550>
  1d:	62 75 
  1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20:	74 75                	je     97 <cropflip_c+0x97>
  22:	35 29 20 34 2e       	xor    eax,0x2e342029
  27:	36 2e 33 00          	ss xor eax,DWORD PTR cs:ss:[rax]

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	7a 00                	jp     26 <.eh_frame+0x26>
	...
